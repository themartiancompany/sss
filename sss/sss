#!/usr/bin/env bash
#
# SPDX-License-Identifier: AGPL-3.0

# A simple workstation builder
_sss() {

  _read_conf

}

_globals() {
  _path="$( \
    export \
      _OLDPWD="$(pwd)" && \
      cd \
        "$( \
          dirname \
            "${BASH_SOURCE[0]}")" && \
       echo \
         "$(pwd)" && \
       cd \
         "${_OLDPWD}" && \
       unset \
         _OLDPWD)"
  unset \
    _OLDPWD
  app_name="$( \
    basename \
      "${BASH_SOURCE[0]}")"
  _conf_dir="${HOME}/.config/${app_name}"
  [ ! -n "${TERMUX_VERSION}" ] && \
    _user="dev"
  _deps=(
    'dynssh'
    'screen'
  )
  _dev='wlan0' # TODO: to get dynamically
               #       from ifconfig
  _port=2222   # TODO: to be random
  _user='dev'  # Meh
}

_read_conf() {
  local \
    _conf \
    _dir \
    _hostname=""
  _conf="${_conf_dir}/screens.cfg"
  _check_conf \
    "${_conf}"
  _cfg="$( \
    cat \
      "${_conf}")"
  _cfg="$( \
    echo \
      "${_cfg}" | \
      sed \
        -e \
          "/# */d" | \
        grep \
          "=" )"
  [[ "${_cfg}" == '' ]] && \
    echo \
      "ERROR: empty configuration file!" && \
    return \
      1
}

_msg_err() {
  local \
    _msg=(
      "$@"
    )
  echo \
    "${_msg[*]}"
  exit \
    1
}

_check_cmd(){
  local \
    _cmd="${1}" \
    _cmd_var \
    _flag
  _cmd_var="$(echo \
                "${_cmd}" | \
                sed \
                  "s/-/_/g")"
  command \
     -v "${_cmd}" &> /dev/null && \
    printf \
      -v "_${_cmd_var}" \
      "$(which \
           "${_cmd}")" && \
    _flag=true
  [ -e "${_path}/${_cmd}" ] && \
    printf \
      -v "_${_cmd_var}" \
      "${_path}/${_cmd}" && \
    _flag=true
  [[ "${_flag}" != "true" ]] && \
    _msg_err \
      "Install ${_cmd}"
}

_check_deps() {
  local \
    _dep
  for _dep in "${_deps[@]}"; do
    _check_cmd \
      "${_dep}"
  done
}

_globals
_check_deps

_sss

# vim:set sw=2 sts=-1 et:
